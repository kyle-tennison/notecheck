name: Upload Python Package

on:
  release:
    types: [published]

# Top‑level permissions (can also be set per‑job)
permissions:
  contents: read
  packages: write    # allow publishing
  id-token: write    # for OIDC if you want to avoid storing a long‑lived token

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Build release distributions
        run: |
          python -m pip install --upgrade build
          python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    needs: release-build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      # if your tag is exactly the version, you can do:
      # url: https://pypi.org/project/YOURPROJECT/${{ github.event.release.tag_name }}
      url: https://pypi.org/project/notecheck

    steps:
      - name: Download built distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          # directory where your .whl / .tar.gz are located
          packages-dir: dist/
          # explicitly pass your PyPI token
          token: ${{ secrets.PYPI_API_TOKEN }}
